#!/bin/tcsh -f

set time1 = `date +%s`

set called=($_)

if ( "$called" != "" ) then  ### called by source 
   set script_fn=`readlink -f $called[2]`
else                         ### called by direct execution of the script
   set script_fn=`readlink -f $0`
endif

set script_dir=`dirname $script_fn`
set rootdir = `dirname $script_fn`
set abs_rootdir = `cd $rootdir && pwd`



set cutoff = 0
set minus1 = -1
set minus2 = -1
set minus3 = -1

if ( $1 == "-v" ) then
    set argv = ($2 $3)
endif

if ( $# != 1 && $# != 2 ) then
    echo "Usage : cwords <PCs> [cutoff]"
    exit
endif

if (! -es $1 ) then
    echo "cwords : Missing data file ? "
    exit
endif

if ( $# == 2 ) then
    echo $2 | egrep  '^[0-9][0-9]*$' >&! /dev/null
    if ($status != 0 ) then
        echo "Usage : cwords <PCs> [cutoff]"
        exit
    endif
    @ cutoff = $2
endif

echo "\n==> Converting to words"
eval "$abs_rootdir/words_52 < $1 > cwords_words"

echo "\n==> Sorting/Merging"
sort cwords_words | uniq -c | sort -n > cwords_pop

set nofPCs = `tail -1 cwords_words | wc -c | awk '{print $1-1}'`
set start_cut = `awk '{print $1}' cwords_pop | uniq | nl | awk '{if ($1 != $2) print $2}' | head -1 | awk '{print int($1/20)}'`
set lines = `wc -l $1 | awk '{print $1}'`
printf "Tentative starting cutoff is %d\n" $start_cut

if ( $lines > 50000 && $start_cut < 20 && $nofPCs > 5 ) then
    @ start_cut = 10
    @ step_cut  = 3
else
    @ start_cut = 20
    @ step_cut  = 10
endif



if ( $# == 1 ) then

echo "\n==> Testing cutoffs ..."
set cut = $start_cut
set nofcprev = 0

while ( $cut <= 400 )

awk -v cut="$cut" '{if ($1 >= cut) print $1,$2}' cwords_pop | tac > cwords_selected
awk '{print $2}' cwords_selected > cwords_selected_words

($abs_rootdir/merge < cwords_selected_words > cwords_clusters) >& cwords_testing

set nofc = `grep 'to cluster' cwords_testing | tail -1 | awk '{print $6}'`

if ( $nofc < 1 && $lines > 50000 ) then
    echo "[1m[31mLogic failure : empty clusters. Abort.[m"
    exit
endif

printf "Cutoff %5d => %5d clusters\n" $cut $nofc

if ( $nofc < 1 && $lines <= 50000 ) then
    @ nofc = 0
    @ nofcprev = 0
    if ( $cut <= 20 ) then
        @ cut = 10
    else
        @ cut = 20
    endif
endif

@ minus3 = $minus2
@ minus2 = $minus1
@ minus1 = $nofc

if ( $nofc - $nofcprev <= 0 && $cutoff == 0 ) then
    @ cutoff = $cut
endif

if ( $nofc - $nofcprev >= -2 && $nofc - $nofcprev <= 1 && $cutoff > 0 ) then
    @ cut += $step_cut
    awk -v cut="$cut" '{if ($1 >= cut) print $1,$2}' cwords_pop | tac > cwords_selected
    awk '{print $2}' cwords_selected > cwords_selected_words
    ($abs_rootdir/merge < cwords_selected_words > cwords_clusters) >& cwords_testing
    set nofc_next = `grep 'to cluster' cwords_testing | tail -1 | awk '{print $6}'`
    @ cut -= $step_cut
    if ( $nofc_next >= $nofc ) then
        @ cutoff = 0
    else
        @ cutoff = $cut
        @ cut = 500
    endif
endif

@ nofcprev = $nofc
@ cut += $step_cut

end

if ( $cut < 500 ) then
    echo "[1m[31mLogic failure at cluster determination. Abort.[m"
    exit
endif

if ( $cutoff > 20 && $minus2 - $nofc >= 0 && $minus2 - $nofc < 5 ) then
    @ cutoff -= $step_cut
endif

# if ( $minus3 > 0 && $minus3 - $nofc >= 2 ) then
#     @ cutoff -= 20
# endif
# 
# if ( $minus3 < 0 && $minus2 > 0 && $minus2 - $nofc >= 2 ) then
#     @ cutoff -= 10
# endif



endif

echo "\n==> Selected cutoff is $cutoff" 

echo "\n==> Clustering words"
awk -v cut="$cutoff" '{if ($1 >= cut) print $1,$2}' cwords_pop | tac > cwords_selected
awk '{print $2}' cwords_selected > cwords_selected_words
$abs_rootdir/merge < cwords_selected_words > cwords_clusters


echo "\n==> Clustering structures"
eval "$abs_rootdir/words52_to_PCs < $1 > cwords_FINAL"

set tot = `wc -l < cwords_FINAL`
echo "\n==> $tot structures assigned.\n"

cp cwords_FINAL carma.5-D.clusters.dat

set time2 = `date +%s`
@ dt = $time2 - $time1

echo "All done in $dt seconds."



